from django.template import Context, loader, RequestContext
from django.http import HttpResponse, HttpResponseRedirect
from django.shortcuts import render_to_response
from messageboards.models import User, Message
import hashlib

def register(request):
	if(request.method == 'POST'):
		try:
			u = User(user=request.POST['user'],
				passwd=hashlib.sha512(request.POST['passwd']).hexdigest())
			u.save()
			return HttpResponseRedirect('/boards/')
		except: 
			return HttpResponse('Username already exists')
	else:
		return render_to_response('messageboards/register.html', {},
            context_instance=RequestContext(request))

def login(request):
	if(request.method == 'POST'):
		try:
			u = User.objects.get(user=request.POST['username'],
				passwd=hashlib.sha512(request.POST['password']).hexdigest())
			m = Message.objects.values('page').distinct()
			t = loader.get_template('messageboards/list.html')
			c = Context({'messages':m, 'name':u.user})
			response = HttpResponse(t.render(c))
			response.set_cookie('id', u.pk)			
			return response
		except User.DoesNotExist:
			return HttpResponse('Bad credentials')
	else:
		return render_to_response('messageboards/login.html', {},
				context_instance=RequestContext(request))

def messages(request, inpage):
	if(request.method == 'POST'):
		if(not request.COOKIES.has_key('id')):
			return HttpResponseRedirect('/boards/')
		m = Message(user_id=request.COOKIES['id'], page=inpage,
			message=request.POST['message'])
		m.save();
	try:
		m = Message.objects.select_related().filter(page=inpage).order_by('-time')
	except Message.DoesNotExist:
		m = None
	return render_to_response('messageboards/page.html',
		{'page':inpage, 'messages':m},
        context_instance=RequestContext(request))

def default(request):
	return HttpResponseRedirect('/boards/')
